[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Python path
pythonpath = .

# Markers
markers =
    asyncio: mark test as needing asyncio
    integration: mark test as integration test (requires Docker)
    slow: mark test as slow running
    unit: mark test as unit test

# Async support handled by pytest-asyncio plugin

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    -ra

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage options (when using --cov)
[coverage:run]
source = src,tools,services,agents
omit = 
    */tests/*
    */__pycache__/*
    */test_*.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: