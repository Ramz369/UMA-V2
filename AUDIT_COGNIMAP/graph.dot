strict digraph {
"cognimap/__init__.py" [loc=33, hash="831b7ddc8d8bac4e", has_fingerprint=True, color=black];
"core.fingerprint.Fingerprint" [color=black];
"core.scanner.CodeScanner" [color=black];
"core.analyzer.SemanticAnalyzer" [color=black];
"core.protocol.CogniMapProtocol" [color=black];
"cognimap/cli.py" [loc=488, hash="8b83edfcc1c35e18", has_fingerprint=True, color=black];
click [color=black];
yaml [color=black];
json [color=black];
"pathlib.Path" [color=black];
"rich.console.Console" [color=black];
"rich.table.Table" [color=black];
"rich.progress.Progress" [color=black];
"rich.progress.SpinnerColumn" [color=black];
"rich.progress.TextColumn" [color=black];
logging [color=black];
"typing.Optional" [color=black];
"core.fingerprint.FingerprintInjector" [color=black];
"core.fingerprint.FingerprintCleaner" [color=black];
"collectors.serena_collector.SerenaMCPCollector" [color=black];
"graph.graph_builder.GraphBuilder" [color=black];
"graph.graph_builder.GraphDatabase" [color=black];
"graph.graph_analyzer.GraphAnalyzer" [color=black];
"graph.graph_visualizer.GraphVisualizer" [color=black];
shutil [color=black];
"cognimap/setup.py" [loc=95, hash="500bbde80a069016", has_fingerprint=True, color=black];
"setuptools.setup" [color=black];
"setuptools.find_packages" [color=black];
"cognimap/graph/__init__.py" [loc=14, hash=edb6eb8610c951c2, has_fingerprint=False, color=black];
"graph_builder.GraphBuilder" [color=black];
"graph_builder.GraphDatabase" [color=black];
"graph_analyzer.GraphAnalyzer" [color=black];
"graph_visualizer.GraphVisualizer" [color=black];
"cognimap/graph/graph_visualizer.py" [loc=187, hash=f7c804c03622cabb, has_fingerprint=False, color=black];
"typing.Dict" [color=black];
"typing.List" [color=black];
"typing.Any" [color=black];
"cognimap/graph/graph_analyzer.py" [loc=280, hash=cf06eb068c0ea5b5, has_fingerprint=False, color=black];
"typing.Set" [color=black];
"typing.Tuple" [color=black];
"cognimap/graph/graph_builder.py" [loc=371, hash=b406a8bbc4a5f58f, has_fingerprint=True, color=black];
re [color=black];
"datetime.datetime" [color=black];
ast [color=black];
"cognimap/collectors/__init__.py" [loc=26, hash="1a351ea5b925684b", has_fingerprint=True, color=black];
"serena_collector.SerenaMCPCollector" [color=black];
"serena_collector.SerenaMCPTool" [color=black];
"cognimap/collectors/serena_collector.py" [loc=464, hash="2fa5fd9b02d4260b", has_fingerprint=True, color=black];
uuid [color=black];
"cognimap/core/analyzer.py" [loc=482, hash="7bcac65d8c6157d8", has_fingerprint=True, color=black];
hashlib [color=black];
"cognimap/core/__init__.py" [loc=38, hash=adb389b8c2e811c4, has_fingerprint=True, color=black];
"fingerprint.Fingerprint" [color=black];
"fingerprint.FingerprintInjector" [color=black];
"fingerprint.FingerprintCleaner" [color=black];
"scanner.CodeScanner" [color=black];
"scanner.MultiLanguageParser" [color=black];
"analyzer.SemanticAnalyzer" [color=black];
"analyzer.IntentExtractor" [color=black];
"protocol.CogniMapProtocol" [color=black];
"protocol.ProtocolVersion" [color=black];
"cognimap/core/fingerprint.py" [loc=381, hash="3e8f17a0f452bdc3", has_fingerprint=True, color=black];
"cognimap/core/protocol.py" [loc=339, hash="09c08cabb0a1ce52", has_fingerprint=True, color=black];
"enum.Enum" [color=black];
"dataclasses.dataclass" [color=black];
"dataclasses.asdict" [color=black];
"cognimap/core/scanner.py" [loc=529, hash="1a1a13f688aa7abc", has_fingerprint=True, color=black];
"cognimap/__init__.py" -> "core.fingerprint.Fingerprint";
"cognimap/__init__.py" -> "core.scanner.CodeScanner";
"cognimap/__init__.py" -> "core.analyzer.SemanticAnalyzer";
"cognimap/__init__.py" -> "core.protocol.CogniMapProtocol";
"cognimap/cli.py" -> click;
"cognimap/cli.py" -> yaml;
"cognimap/cli.py" -> json;
"cognimap/cli.py" -> "pathlib.Path";
"cognimap/cli.py" -> "rich.console.Console";
"cognimap/cli.py" -> "rich.table.Table";
"cognimap/cli.py" -> "rich.progress.Progress";
"cognimap/cli.py" -> "rich.progress.SpinnerColumn";
"cognimap/cli.py" -> "rich.progress.TextColumn";
"cognimap/cli.py" -> logging;
"cognimap/cli.py" -> "typing.Optional";
"cognimap/cli.py" -> "core.fingerprint.Fingerprint";
"cognimap/cli.py" -> "core.fingerprint.FingerprintInjector";
"cognimap/cli.py" -> "core.fingerprint.FingerprintCleaner";
"cognimap/cli.py" -> "core.scanner.CodeScanner";
"cognimap/cli.py" -> "core.analyzer.SemanticAnalyzer";
"cognimap/cli.py" -> "core.protocol.CogniMapProtocol";
"cognimap/cli.py" -> "collectors.serena_collector.SerenaMCPCollector";
"cognimap/cli.py" -> "graph.graph_builder.GraphBuilder";
"cognimap/cli.py" -> "graph.graph_builder.GraphDatabase";
"cognimap/cli.py" -> "graph.graph_analyzer.GraphAnalyzer";
"cognimap/cli.py" -> "graph.graph_visualizer.GraphVisualizer";
"cognimap/cli.py" -> shutil;
"cognimap/setup.py" -> "setuptools.setup";
"cognimap/setup.py" -> "setuptools.find_packages";
"cognimap/setup.py" -> "pathlib.Path";
"cognimap/graph/__init__.py" -> "graph_builder.GraphBuilder";
"cognimap/graph/__init__.py" -> "graph_builder.GraphDatabase";
"cognimap/graph/__init__.py" -> "graph_analyzer.GraphAnalyzer";
"cognimap/graph/__init__.py" -> "graph_visualizer.GraphVisualizer";
"cognimap/graph/graph_visualizer.py" -> "typing.Dict";
"cognimap/graph/graph_visualizer.py" -> "typing.List";
"cognimap/graph/graph_visualizer.py" -> "typing.Any";
"cognimap/graph/graph_visualizer.py" -> "pathlib.Path";
"cognimap/graph/graph_analyzer.py" -> "typing.Dict";
"cognimap/graph/graph_analyzer.py" -> "typing.List";
"cognimap/graph/graph_analyzer.py" -> "typing.Any";
"cognimap/graph/graph_analyzer.py" -> "typing.Set";
"cognimap/graph/graph_analyzer.py" -> "typing.Tuple";
"cognimap/graph/graph_analyzer.py" -> "pathlib.Path";
"cognimap/graph/graph_builder.py" -> json;
"cognimap/graph/graph_builder.py" -> re;
"cognimap/graph/graph_builder.py" -> "pathlib.Path";
"cognimap/graph/graph_builder.py" -> "typing.Dict";
"cognimap/graph/graph_builder.py" -> "typing.List";
"cognimap/graph/graph_builder.py" -> "typing.Any";
"cognimap/graph/graph_builder.py" -> "typing.Set";
"cognimap/graph/graph_builder.py" -> "typing.Tuple";
"cognimap/graph/graph_builder.py" -> "datetime.datetime";
"cognimap/graph/graph_builder.py" -> ast;
"cognimap/collectors/__init__.py" -> "serena_collector.SerenaMCPCollector";
"cognimap/collectors/__init__.py" -> "serena_collector.SerenaMCPTool";
"cognimap/collectors/serena_collector.py" -> json;
"cognimap/collectors/serena_collector.py" -> uuid;
"cognimap/collectors/serena_collector.py" -> "pathlib.Path";
"cognimap/collectors/serena_collector.py" -> "typing.Dict";
"cognimap/collectors/serena_collector.py" -> "typing.List";
"cognimap/collectors/serena_collector.py" -> "typing.Any";
"cognimap/collectors/serena_collector.py" -> "typing.Optional";
"cognimap/collectors/serena_collector.py" -> "datetime.datetime";
"cognimap/collectors/serena_collector.py" -> logging;
"cognimap/collectors/serena_collector.py" -> "core.fingerprint.FingerprintInjector";
"cognimap/collectors/serena_collector.py" -> "core.fingerprint.Fingerprint";
"cognimap/collectors/serena_collector.py" -> re;
"cognimap/core/analyzer.py" -> re;
"cognimap/core/analyzer.py" -> "pathlib.Path";
"cognimap/core/analyzer.py" -> "typing.Dict";
"cognimap/core/analyzer.py" -> "typing.List";
"cognimap/core/analyzer.py" -> "typing.Any";
"cognimap/core/analyzer.py" -> "typing.Optional";
"cognimap/core/analyzer.py" -> "typing.Set";
"cognimap/core/analyzer.py" -> "typing.Tuple";
"cognimap/core/analyzer.py" -> json;
"cognimap/core/analyzer.py" -> "datetime.datetime";
"cognimap/core/analyzer.py" -> hashlib;
"cognimap/core/__init__.py" -> "fingerprint.Fingerprint";
"cognimap/core/__init__.py" -> "fingerprint.FingerprintInjector";
"cognimap/core/__init__.py" -> "fingerprint.FingerprintCleaner";
"cognimap/core/__init__.py" -> "scanner.CodeScanner";
"cognimap/core/__init__.py" -> "scanner.MultiLanguageParser";
"cognimap/core/__init__.py" -> "analyzer.SemanticAnalyzer";
"cognimap/core/__init__.py" -> "analyzer.IntentExtractor";
"cognimap/core/__init__.py" -> "protocol.CogniMapProtocol";
"cognimap/core/__init__.py" -> "protocol.ProtocolVersion";
"cognimap/core/fingerprint.py" -> uuid;
"cognimap/core/fingerprint.py" -> json;
"cognimap/core/fingerprint.py" -> re;
"cognimap/core/fingerprint.py" -> logging;
"cognimap/core/fingerprint.py" -> "datetime.datetime";
"cognimap/core/fingerprint.py" -> "pathlib.Path";
"cognimap/core/fingerprint.py" -> "typing.Dict";
"cognimap/core/fingerprint.py" -> "typing.Any";
"cognimap/core/fingerprint.py" -> "typing.Optional";
"cognimap/core/fingerprint.py" -> "typing.List";
"cognimap/core/fingerprint.py" -> hashlib;
"cognimap/core/protocol.py" -> "typing.Dict";
"cognimap/core/protocol.py" -> "typing.List";
"cognimap/core/protocol.py" -> "typing.Any";
"cognimap/core/protocol.py" -> "typing.Optional";
"cognimap/core/protocol.py" -> "enum.Enum";
"cognimap/core/protocol.py" -> "dataclasses.dataclass";
"cognimap/core/protocol.py" -> "dataclasses.asdict";
"cognimap/core/protocol.py" -> "datetime.datetime";
"cognimap/core/protocol.py" -> json;
"cognimap/core/scanner.py" -> ast;
"cognimap/core/scanner.py" -> re;
"cognimap/core/scanner.py" -> "pathlib.Path";
"cognimap/core/scanner.py" -> "typing.Dict";
"cognimap/core/scanner.py" -> "typing.List";
"cognimap/core/scanner.py" -> "typing.Any";
"cognimap/core/scanner.py" -> "typing.Optional";
"cognimap/core/scanner.py" -> "typing.Set";
"cognimap/core/scanner.py" -> json;
}
